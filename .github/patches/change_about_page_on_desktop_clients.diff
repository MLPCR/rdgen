diff --git a/flutter/lib/desktop/pages/desktop_setting_page.dart b/flutter/lib/desktop/pages/desktop_setting_page.dart
index d21e7d3..b9d5acf 100644
--- a/flutter/lib/desktop/pages/desktop_setting_page.dart
+++ b/flutter/lib/desktop/pages/desktop_setting_page.dart
@@ -2052,91 +2052,126 @@ class _About extends StatefulWidget {
 class _AboutState extends State<_About> {
   @override
   Widget build(BuildContext context) {
-    return futureBuilder(future: () async {
-      final license = await bind.mainGetLicense();
-      final version = await bind.mainGetVersion();
-      final buildDate = await bind.mainGetBuildDate();
-      final fingerprint = await bind.mainGetFingerprint();
-      return {
-        'license': license,
-        'version': version,
-        'buildDate': buildDate,
-        'fingerprint': fingerprint
-      };
-    }(), hasData: (data) {
-      final license = data['license'].toString();
-      final version = data['version'].toString();
-      final buildDate = data['buildDate'].toString();
-      final fingerprint = data['fingerprint'].toString();
-      const linkStyle = TextStyle(decoration: TextDecoration.underline);
-      final scrollController = ScrollController();
-      return SingleChildScrollView(
-        controller: scrollController,
-        child: _Card(title: translate('About RustDesk'), children: [
-          Column(
-            crossAxisAlignment: CrossAxisAlignment.start,
+    return futureBuilder(
+      future: () async {
+        final license = await bind.mainGetLicense();
+        final version = await bind.mainGetVersion();
+        final buildDate = await bind.mainGetBuildDate();
+        final fingerprint = await bind.mainGetFingerprint();
+        return {
+          'license': license,
+          'version': version,
+          'buildDate': buildDate,
+          'fingerprint': fingerprint
+        };
+      }(),
+      hasData: (data) {
+        final license = data['license'].toString();
+        final version = data['version'].toString();
+        final buildDate = data['buildDate'].toString();
+        final fingerprint = data['fingerprint'].toString();
+        const linkStyle = TextStyle(decoration: TextDecoration.underline);
+        final scrollController = ScrollController();
+        return SingleChildScrollView(
+          controller: scrollController,
+          child: _Card(
+            title: translate('About RustDesk'),
             children: [
-              const SizedBox(
-                height: 8.0,
-              ),
-              SelectionArea(
-                  child: Text('${translate('Version')}: $version')
-                      .marginSymmetric(vertical: 4.0)),
-              SelectionArea(
-                  child: Text('${translate('Build Date')}: $buildDate')
-                      .marginSymmetric(vertical: 4.0)),
-              if (!isWeb)
-                SelectionArea(
-                    child: Text('${translate('Fingerprint')}: $fingerprint')
-                        .marginSymmetric(vertical: 4.0)),
-              InkWell(
-                  onTap: () {
-                    launchUrlString('https://rustdesk.com/privacy.html');
-                  },
-                  child: Text(
-                    translate('Privacy Statement'),
-                    style: linkStyle,
-                  ).marginSymmetric(vertical: 4.0)),
-              InkWell(
-                  onTap: () {
-                    launchUrlString('https://rustdesk.com');
-                  },
-                  child: Text(
-                    translate('Website'),
-                    style: linkStyle,
-                  ).marginSymmetric(vertical: 4.0)),
-              Container(
-                decoration: const BoxDecoration(color: Color(0xFF2c8cff)),
-                padding:
-                    const EdgeInsets.symmetric(vertical: 24, horizontal: 8),
-                child: SelectionArea(
-                    child: Row(
-                  children: [
-                    Expanded(
-                      child: Column(
-                        crossAxisAlignment: CrossAxisAlignment.start,
+              Column(
+                crossAxisAlignment: CrossAxisAlignment.start,
+                children: [
+                  const SizedBox(
+                    height: 8.0,
+                  ),
+                  SelectionArea(
+                    child: Text('${translate('Version')}: $version')
+                        .marginSymmetric(vertical: 4.0),
+                  ),
+                  SelectionArea(
+                    child: Text('${translate('Build Date')}: $buildDate')
+                        .marginSymmetric(vertical: 4.0),
+                  ),
+                  if (!isWeb)
+                    SelectionArea(
+                      child: Text('${translate('Fingerprint')}: $fingerprint')
+                          .marginSymmetric(vertical: 4.0),
+                    ),
+                  // New Terms and Conditions link
+                  InkWell(
+                    onTap: () {
+                      launchUrlString(
+                        'https://www.mylocalpcrepair.co.uk/terms-and-conditions/',
+                      );
+                    },
+                    child: Text(
+                      'Terms and Conditions',
+                      style: linkStyle,
+                    ).marginSymmetric(vertical: 4.0),
+                  ),
+                  // Updated Privacy and Cookie Policy link
+                  InkWell(
+                    onTap: () {
+                      launchUrlString(
+                        'https://www.mylocalpcrepair.co.uk/privacy-and-cookie-policy/',
+                      );
+                    },
+                    child: Text(
+                      'Privacy and Cookie Policy',
+                      style: linkStyle,
+                    ).marginSymmetric(vertical: 4.0),
+                  ),
+                  // Updated Website text and link
+                  InkWell(
+                    onTap: () {
+                      launchUrlString(
+                        'https://www.mylocalpcrepair.co.uk',
+                      );
+                    },
+                    child: Text(
+                      'My Local PC Repair Website',
+                      style: linkStyle,
+                    ).marginSymmetric(vertical: 4.0),
+                  ),
+                  Container(
+                    decoration:
+                        const BoxDecoration(color: Color(0xFF2c8cff)),
+                    padding: const EdgeInsets.symmetric(
+                        vertical: 24, horizontal: 8),
+                    child: SelectionArea(
+                      child: Row(
                         children: [
-                          Text(
-                            'Copyright © ${DateTime.now().toString().substring(0, 4)} Purslane Ltd.\n$license',
-                            style: const TextStyle(color: Colors.white),
+                          Expanded(
+                            child: Column(
+                              crossAxisAlignment:
+                                  CrossAxisAlignment.start,
+                              children: [
+                                Text(
+                                  'Copyright © ${DateTime.now().toString().substring(0, 4)} Purslane Ltd.\n$license',
+                                  style: const TextStyle(
+                                    color: Colors.white,
+                                  ),
+                                ),
+                                Text(
+                                  translate('Slogan_tip'),
+                                  style: const TextStyle(
+                                    fontWeight: FontWeight.w800,
+                                    color: Colors.white,
+                                  ),
+                                )
+                              ],
+                            ),
                           ),
-                          Text(
-                            translate('Slogan_tip'),
-                            style: TextStyle(
-                                fontWeight: FontWeight.w800,
-                                color: Colors.white),
-                          )
                         ],
                       ),
                     ),
-                  ],
-                )),
-              ).marginSymmetric(vertical: 4.0)
+                  ).marginSymmetric(vertical: 4.0)
+                ],
+              ).marginOnly(left: _kContentHMargin)
             ],
-          ).marginOnly(left: _kContentHMargin)
-        ]),
-      );
-    });
+          ),
+        );
+      },
+    );
   }
 }
 
